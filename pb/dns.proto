syntax = "proto3";

package pb;
option go_package = "./pb";
service DNS {
  rpc SetDNSChaos(SetDNSChaosRequest) returns (DNSChaosResponse) {}
  rpc CancelDNSChaos(CancelDNSChaosRequest) returns (DNSChaosResponse) {}
}

message SetDNSChaosRequest {
  string name = 1;
  repeated Pod pods = 2;
  
  // action means the chaos action, values can be "random" or "error"
  //   "random": return random IP for DNS request
  //   "error":  return error for DNS request
  string action = 3;

  // scope means the chaos scope, values can be "inner", "outer" or "all":
  //   "inner": chaos only works on the inner host in Kubernetes cluster
  //   "outer": chaos only works on the outer host of Kubernetes cluster
  //   "all":   chaos works on all host
  string scope = 4;
  string selector = 5;
  repeated string patterns = 6;
  repeated IpDomainMap ipDomainMaps = 7;
}

message Pod {
  string namespace = 1;
  string name = 2;
}

message CancelDNSChaosRequest {
  string name = 1;
}

message DNSChaosResponse {
  bool result = 1;
  string msg = 2;
}

// Defines the mapping relationship between an IP address and a domain name.
// This structure represents a single IP-to-domain pair.
message IpDomainMap {
  string ip = 1;
  string domain = 2;
}